/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package trabalho5.view.registered;

import trabalho5.database.Registered;
import trabalho5.database.Event;
import trabalho5.view.*;

import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.table.DefaultTableModel;

import java.util.ArrayList;

/**
 *
 * @author Rodrigo
 */
public class SearchRegistered extends javax.swing.JFrame {

    private final int type;
    private final ArrayList<Integer> ids;
    
    /**
     * Creates new form SearchRegistered
     * 
     * @param type
     * @param filter
     * @param value
     * @param aditional
     */
    public SearchRegistered(int type, int filter, String value, String aditional) {
        this.type = type;
        this.ids = new ArrayList();
        initComponents();
        
        // imprime os inscritos
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        try {
            ResultSet rs;
            if (filter == SearchRegisteredByPeople.EVENTANDEDITION) {
                
                if (value.equals("Todos"))
                    rs = Registered.findViewAll(MainFrame.db);
                else {
                    // pega o codEv
                    rs = Event.findByName(MainFrame.db, value);
                    Event ev = Event.next(rs);
                    int codEv = ev.getCodEv();
                    // fecha o cursor
                    MainFrame.db.close();

                    // pega o numEd
                    String[] parts = aditional.split(" ");
                    int numEd = Integer.valueOf(parts[0]).intValue();

                    rs = Registered.findViewByEventAndEdition(MainFrame.db, codEv, numEd);
                }
            } else {
                // SELECT ALL
                if (value.isEmpty())
                    rs = Registered.findViewAll(MainFrame.db);
                // SELECT By Name
                else
                    rs = Registered.findViewByName(MainFrame.db, value);
            }
            
            while(rs.next()) {
                // armazena o id da pessoa no array
                this.ids.add(rs.getInt("idPe"));
                // adiciona uma linha na tabela
                String presenter = "Não";
                if (rs.getString("tipoApresentador").charAt(0) == 'S')
                    presenter = "Sim";
                model.addRow(new Object[] {rs.getString("nomeEv"), rs.getInt("numEd"), rs.getString("NomePe"), 
                    rs.getString("dataInsc"), presenter});
            }
            // fecha o cursor
            MainFrame.db.close();
            
        } catch(SQLException e) {
            Message msg = new Message(this, true, e.getMessage());
            msg.setTitle("Erro");
            msg.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inscritos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Evento", "Edição", "Nome do Inscrito", "Data de Inscrição", "Apresentador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setMinWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(3).setMinWidth(110);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(4).setMinWidth(90);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Inicia a tela de remoção de inscrito
     */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // remoção de inscrito
        if(this.type == CRUDType.REMOVE) {
            // pega o inscrito selecionado
            int i = this.jTable1.getSelectedRow();
            try {
                // pega o código do evento
                ResultSet rs = Event.findByName(MainFrame.db, (String) this.jTable1.getValueAt(i, 0));
                Event ev = Event.next(rs);
                // fecha o cursor
                MainFrame.db.close();
                
                // pega o id do inscrito
                int indice_people = this.jTable1.getSelectedRow();
                int idApr = this.ids.get(indice_people);
                
                // pega o objeto a ser removido
                Registered r = new Registered(ev.getCodEv(), (int) this.jTable1.getValueAt(i, 1), idApr, 
                    (String) this.jTable1.getValueAt(i, 3), (char) this.jTable1.getValueAt(i, 4));
                // inicia a interface de remoção
                RemoveRegistered removeRegistered = new RemoveRegistered(r);
                removeRegistered.setVisible(true);
                this.dispose();
                
            } catch(SQLException e) {
                Message msg = new Message(this, true, e.getMessage());
                msg.setTitle("Erro");
                msg.setVisible(true);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
